/*
 * Open DAM API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package opendam

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// A DefaultApiController binds http requests to an api service and writes the service results to the http response
type DefaultApiController struct {
	service DefaultApiServicer
}

// NewDefaultApiController creates a default api controller
func NewDefaultApiController(s DefaultApiServicer) Router {
	return &DefaultApiController{service: s}
}

// Routes returns all of the api route for the DefaultApiController
func (c *DefaultApiController) Routes() Routes {
	return Routes{
		{
			"DeleteAsset",
			strings.ToUpper("Delete"),
			"/asset/{asset_id}",
			c.DeleteAsset,
		},
		{
			"GetAsset",
			strings.ToUpper("Get"),
			"/asset/{asset_id}",
			c.GetAsset,
		},
		{
			"GetAssets",
			strings.ToUpper("Post"),
			"/assets",
			c.GetAssets,
		},
		{
			"GetJob",
			strings.ToUpper("Get"),
			"/job/{job_id}",
			c.GetJob,
		},
		{
			"PostAsset",
			strings.ToUpper("Post"),
			"/asset",
			c.PostAsset,
		},
		{
			"PutAsset",
			strings.ToUpper("Put"),
			"/asset/{asset_id}",
			c.PutAsset,
		},
	}
}

// DeleteAsset -
func (c *DefaultApiController) DeleteAsset(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	assetId := params["assetId"]
	result, err := c.service.DeleteAsset(assetId)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// GetAsset -
func (c *DefaultApiController) GetAsset(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	assetId := params["assetId"]
	result, err := c.service.GetAsset(assetId)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// GetAssets -
func (c *DefaultApiController) GetAssets(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetAssets()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// GetJob -
func (c *DefaultApiController) GetJob(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	jobId := params["jobId"]
	result, err := c.service.GetJob(jobId)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// PostAsset -
func (c *DefaultApiController) PostAsset(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.PostAsset()
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}

// PutAsset -
func (c *DefaultApiController) PutAsset(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	assetId := params["assetId"]
	result, err := c.service.PutAsset(assetId)
	if err != nil {
		w.WriteHeader(500)
		return
	}

	EncodeJSONResponse(result, nil, w)
}
